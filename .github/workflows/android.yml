name: Build & Publish Termux APK

on:
  push:
    tags:
      - v*
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Workaround for prefab-plugin path issue (termux flavor)
      run: |
        ACTUAL_FILE_LOCATION="$GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/prefab-plugin-2.1.0.jar"
        EXPECTED_SYMLINK_DIR="$GITHUB_WORKSPACE/Submodule/AIDE/app_rewrite/libs"
        EXPECTED_SYMLINK_PATH="$EXPECTED_SYMLINK_DIR/prefab-plugin-2.1.0.jar"

        echo "Attempting to create symlink for prefab-plugin-2.1.0.jar"
        if [ -f "$ACTUAL_FILE_LOCATION" ]; then
          mkdir -p "$EXPECTED_SYMLINK_DIR"
          ln -sf "$ACTUAL_FILE_LOCATION" "$EXPECTED_SYMLINK_PATH"
          ls -la "$EXPECTED_SYMLINK_DIR"
        else
          echo "ERROR: $ACTUAL_FILE_LOCATION not found"
          exit 1
        fi
      shell: bash

    - name: Add missing XML dependencies
      run: |
        echo "Adding missing XML dependencies to aaptcompiler module"
        XML_GRADLE_FILE="$GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/build.gradle.kts"
        
        if [ -f "$XML_GRADLE_FILE" ]; then
          # Check if dependencies block exists
          if grep -q "dependencies" "$XML_GRADLE_FILE"; then
            # Add dependency before the closing brace of dependencies block
            sed -i '/dependencies {/a \    implementation("javax.xml.stream:stax-api:1.0-2")' "$XML_GRADLE_FILE"
          else
            # Add new dependencies block
            echo -e "\ndependencies {\n    implementation(\"javax.xml.stream:stax-api:1.0-2\")\n}" >> "$XML_GRADLE_FILE"
          fi
          cat "$XML_GRADLE_FILE"
        else
          echo "WARNING: aaptcompiler build.gradle.kts not found at expected location"
        fi
      shell: bash

    - name: Build APK for termux
      run: ./gradlew app_flavor:termux:assembleRelease

    - name: Get TAG_VERSION_NAME from build.gradle.kts
      id: get_version_info
      run: |
        TAG_VERSION_NAME=$(grep "val TAG_VERSION_NAME =" build.gradle.kts | awk '{print $4}' | tr -d '"')
        echo "TAG_VERSION_NAME=${TAG_VERSION_NAME}" >> $GITHUB_ENV
        echo "Found version: ${TAG_VERSION_NAME}"

    - name: Create output directories
      run: mkdir -p build/app/outputs/apk/termux/release/

    - name: Find built APK
      id: find_apk
      run: |
        APK_PATH=$(find $GITHUB_WORKSPACE -name "*.apk" -path "*/app_flavor-termux/outputs/apk/*/release/*" | head -n 1)
        if [ -z "$APK_PATH" ]; then
          echo "ERROR: Could not find built APK"
          find $GITHUB_WORKSPACE -name "*.apk"
          exit 1
        fi
        echo "APK_PATH=${APK_PATH}" >> $GITHUB_ENV
        echo "Found APK at: ${APK_PATH}"

    - name: Rename APK for termux
      run: |
        if [ -f "$APK_PATH" ]; then
          cp "$APK_PATH" build/app/outputs/apk/termux/release/AIDE-termux.apk
          echo "Renamed APK from $APK_PATH to build/app/outputs/apk/termux/release/AIDE-termux.apk"
        else
          echo "ERROR: APK not found at $APK_PATH"
          exit 1
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: AIDE-termux.apk
        path: build/app/outputs/apk/termux/release/AIDE-termux.apk
