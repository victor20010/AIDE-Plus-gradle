name: Build & Publish Termux APK

on:
  push:
    tags:
      - v*
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Verify initial directory structure (for debugging paths)
      run: |
        echo "====== Verifying Initial Directory Structure ======"
        echo "Listing GITHUB_WORKSPACE top-level:"
        ls -la $GITHUB_WORKSPACE
        echo "--- Listing $GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/ (Source for JARs) ---"
        ls -la $GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/ || echo "Directory $GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/ not found"
        echo "--- Listing $GITHUB_WORKSPACE/Submodule/AIDE/app_rewrite/libs/ (Target for symlinks, before creation) ---"
        ls -la $GITHUB_WORKSPACE/Submodule/AIDE/app_rewrite/libs/ || echo "Directory $GITHUB_WORKSPACE/Submodule/AIDE/app_rewrite/libs/ not found (expected if not yet created)"
        echo "--- Listing $GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/ (Location of aaptcompiler build file) ---"
        ls -la $GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/ || echo "Directory $GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/ not found"
        echo "===================================================="

    - name: Fix submodule paths (Create symlinks)
      run: |
        echo "====== Starting 'Fix submodule paths' step ======"
        SOURCE_PREFAB_JAR="$GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/prefab-plugin-2.1.0.jar"
        SOURCE_ANDROID_JAR="$GITHUB_WORKSPACE/Submodule/AIDE/AIDE-Plus/app_rewrite/libs/android.jar"
        SYMLINK_DIR_ABSOLUTE="$GITHUB_WORKSPACE/Submodule/AIDE/app_rewrite/libs"

        echo "Target directory for symlinks: $SYMLINK_DIR_ABSOLUTE"
        mkdir -p "$SYMLINK_DIR_ABSOLUTE"

        echo "Checking for source file: $SOURCE_PREFAB_JAR"
        if [ ! -f "$SOURCE_PREFAB_JAR" ]; then
          echo "ERROR: Source file prefab-plugin-2.1.0.jar not found at $SOURCE_PREFAB_JAR!"
        else
          echo "Creating symlink for prefab-plugin-2.1.0.jar"
          ln -sfv "$SOURCE_PREFAB_JAR" "$SYMLINK_DIR_ABSOLUTE/prefab-plugin-2.1.0.jar"
        fi

        echo "Checking for source file: $SOURCE_ANDROID_JAR"
        if [ ! -f "$SOURCE_ANDROID_JAR" ]; then
          echo "ERROR: Source file android.jar not found at $SOURCE_ANDROID_JAR!"
        else
          echo "Creating symlink for android.jar"
          ln -sfv "$SOURCE_ANDROID_JAR" "$SYMLINK_DIR_ABSOLUTE/android.jar"
        fi
        
        echo "Verifying created symlinks in $SYMLINK_DIR_ABSOLUTE/:"
        ls -la "$SYMLINK_DIR_ABSOLUTE/"
        
        # Ваша оригинальная проверка на существование файла (после создания симлинка)
        if [ ! -f "$SYMLINK_DIR_ABSOLUTE/prefab-plugin-2.1.0.jar" ]; then # Проверяем сам симлинк
          echo "CRITICAL ERROR: prefab-plugin-2.1.0.jar (symlink or file) not found at $SYMLINK_DIR_ABSOLUTE/prefab-plugin-2.1.0.jar after attempting to create symlink!"
          exit 1
        fi
        echo "Symlink creation step finished."
        echo "================================================"

    - name: Fix XML dependencies in aaptcompiler
      shell: bash
      run: |
        echo "====== Starting 'Fix XML dependencies in aaptcompiler' step ======"
        XML_GRADLE_FILE="$GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/build.gradle.kts"
        
        echo "Attempting to find XML Gradle File for aaptcompiler at: $XML_GRADLE_FILE"
        if [ ! -f "$XML_GRADLE_FILE" ]; then
          echo "ERROR: XML_GRADLE_FILE for aaptcompiler not found at $XML_GRADLE_FILE."
          ls -la "$GITHUB_WORKSPACE/Submodule/Compiletion/Xml/aaptcompiler/" || true
          find "$GITHUB_WORKSPACE/Submodule" -path "*/aaptcompiler/build.gradle.kts" -ls || echo "find command did not locate the file."
          exit 1 
        fi
        
        echo "XML Gradle File for aaptcompiler found at $XML_GRADLE_FILE."
        echo "--- Content of $XML_GRADLE_FILE BEFORE modification ---"
        cat "$XML_GRADLE_FILE"
        echo "--- END of content BEFORE modification ---"
        
        # Создаем резервную копию перед модификацией
        cp "$XML_GRADLE_FILE" "$XML_GRADLE_FILE.bak"

        # Зависимости, которые нужно добавить
        # Обратите внимание на экранирование кавычек и использование переменных для читаемости
        DEP1='implementation("javax.xml.stream:stax-api:1.0-2")'
        DEP2='implementation("com.sun.xml.parsers:jaxp-ri:1.4.5")'
        DEP3='implementation("org.codehaus.woodstox:woodstox-core-asl:4.4.1")'
        # Формируем текст для вставки с правильными отступами (4 пробела)
        DEPS_TO_ADD="    $DEP1\n    $DEP2\n    $DEP3"

        if grep -q "dependencies[\s]*{" "$XML_GRADLE_FILE"; then
          echo "Dependencies block found in $XML_GRADLE_FILE. Adding implementations..."
          # Используем sed для вставки новых зависимостей после строки 'dependencies {'
          # Это заменит открывающую фигурную скобку на скобку + новые зависимости
          # Такой подход должен корректно работать и для "dependencies {}" и для "dependencies { ... }"
          sed -i "s|dependencies[\s]*{|dependencies {\n$DEPS_TO_ADD|" "$XML_GRADLE_FILE"
        else
          echo "Dependencies block NOT found in $XML_GRADLE_FILE. Appending new dependencies block..."
          echo -e "\ndependencies {\n$DEPS_TO_ADD\n}" >> "$XML_GRADLE_FILE"
        fi
        
        echo "--- Content of $XML_GRADLE_FILE AFTER modification ---"
        cat "$XML_GRADLE_FILE"
        echo "--- END of content AFTER modification ---"
        echo "XML dependencies fix for aaptcompiler applied."
        echo "==========================================================="

    - name: Build APK for termux
      run: |
        ./gradlew clean
        ./gradlew :app_flavor:termux:assembleRelease --stacktrace --info

    - name: Get version info
      id: version
      run: |
        VERSION_FILE_PATH="app_flavor/termux/build.gradle" 
        if [ ! -f "$VERSION_FILE_PATH" ]; then
          echo "Error: Version file not found at $VERSION_FILE_PATH"
          exit 1
        fi
        VERSION_CANDIDATE=$(grep -m 1 "versionName" "$VERSION_FILE_PATH" | awk '{print $2}' | tr -d '"')
        if [ -z "$VERSION_CANDIDATE" ]; then
          echo "Error: Could not extract version name from $VERSION_FILE_PATH using 'versionName'."
          cat "$VERSION_FILE_PATH"
          exit 1
        fi
        echo "Extracted VERSION=${VERSION_CANDIDATE}"
        echo "VERSION=${VERSION_CANDIDATE}" >> $GITHUB_ENV
        echo "APK_NAME=AIDE-Plus-Termux-v${VERSION_CANDIDATE}.apk" >> $GITHUB_ENV

    - name: Rename and move APK
      run: |
        mkdir -p build/outputs/apk/
        EXPECTED_APK_PATH="app_flavor/termux/build/outputs/apk/termux/release/app-termux-release.apk"
        echo "Looking for APK at: $EXPECTED_APK_PATH"
        if [ -f "$EXPECTED_APK_PATH" ]; then
          mv "$EXPECTED_APK_PATH" "build/outputs/apk/${APK_NAME}"
          echo "APK successfully renamed and moved to build/outputs/apk/${APK_NAME}"
        else
          echo "WARNING: APK not found at expected location: $EXPECTED_APK_PATH"
          find "$GITHUB_WORKSPACE" -name "*.apk" -ls 
          exit 1
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: AIDE-Plus-Termux-APK
        path: build/outputs/apk/${APK_NAME}
        
    - name: Setup GitHub Pages
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/outputs/apk/
        
    - name: Deploy to GitHub Pages
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/deploy-pages@v4
